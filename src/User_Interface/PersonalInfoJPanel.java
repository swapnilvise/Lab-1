/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package User_Interface;

import Model.Product;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Logger;
import java.util.logging.Level;
//import java.lang.System.Logger;
//import java.lang.System.Logger.Level;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author swapn
 */
public class PersonalInfoJPanel extends javax.swing.JPanel {

    Product product;
    Period Age;
    private boolean errorcode_FName;
    private boolean errorcode_LName;
    private boolean errorcode_DOB;
    private boolean errorcode_SSN;
    BufferedImage biometric_identifier;
    BufferedImage fullface_photo;

    /**
     * Creates new form PersonalInfoJPanel
     */
    public PersonalInfoJPanel(Product product) {
        initComponents();
        this.product = product;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        lbl_Name = new javax.swing.JLabel();
        lbl_DOB = new javax.swing.JLabel();
        lbl_SSN = new javax.swing.JLabel();
        lbl_Biometric_Identifier = new javax.swing.JLabel();
        lbl_Full_Face_Photo = new javax.swing.JLabel();
        lbl_Unique_Identifier = new javax.swing.JLabel();
        txt_LastName = new javax.swing.JTextField();
        lbl_Age = new javax.swing.JLabel();
        txt_DOB = new javax.swing.JTextField();
        btn_Get_Age = new javax.swing.JButton();
        txt_SSN = new javax.swing.JTextField();
        btn_Attach_Photo = new javax.swing.JButton();
        txt_Unique_Identifier = new javax.swing.JTextField();
        lbl_PersonalInfo_Title = new javax.swing.JLabel();
        lbl_FirstName = new javax.swing.JLabel();
        txt_FirstName = new javax.swing.JTextField();
        lbl_Save = new javax.swing.JButton();
        txt_Age = new javax.swing.JTextField();
        mb_LastNameError = new javax.swing.JLabel();
        lbl_Warning = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btn_AttachBiometric = new javax.swing.JButton();
        txt_BiometricIdentifier = new javax.swing.JTextField();
        txt_FullFacePhoto = new javax.swing.JTextField();
        lbl_Image = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(1170, 600));
        jPanel1.setMinimumSize(new java.awt.Dimension(1170, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(1237, 951));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_Name.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_Name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_Name.setText("* Last Name : ");
        jPanel1.add(lbl_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 61, -1, -1));

        lbl_DOB.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_DOB.setText("* Date of Birth (MM/DD/YYYY) : ");
        jPanel1.add(lbl_DOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 139, -1, -1));

        lbl_SSN.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_SSN.setText("* Social Security Number : ");
        jPanel1.add(lbl_SSN, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        lbl_Biometric_Identifier.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_Biometric_Identifier.setText("* Biometric Identifiers : ");
        jPanel1.add(lbl_Biometric_Identifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, -1, -1));

        lbl_Full_Face_Photo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_Full_Face_Photo.setText("* Full Face Photo : ");
        jPanel1.add(lbl_Full_Face_Photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        lbl_Unique_Identifier.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_Unique_Identifier.setText("Unique Identifier Number : ");
        jPanel1.add(lbl_Unique_Identifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, -1));

        txt_LastName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_LastName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_LastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_LastNameActionPerformed(evt);
            }
        });
        jPanel1.add(txt_LastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 58, 143, -1));

        lbl_Age.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_Age.setText("Age : ");
        jPanel1.add(lbl_Age, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, -1, -1));

        txt_DOB.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_DOB.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_DOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_DOBActionPerformed(evt);
            }
        });
        jPanel1.add(txt_DOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 136, 143, -1));

        btn_Get_Age.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btn_Get_Age.setText("Get Age");
        btn_Get_Age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Get_AgeActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Get_Age, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 175, -1, -1));

        txt_SSN.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_SSN.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txt_SSN, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, 143, -1));

        btn_Attach_Photo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btn_Attach_Photo.setText("Attach File");
        btn_Attach_Photo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Attach_PhotoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Attach_Photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 290, 100, -1));

        txt_Unique_Identifier.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_Unique_Identifier.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txt_Unique_Identifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, 143, -1));

        lbl_PersonalInfo_Title.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        lbl_PersonalInfo_Title.setText("PERSONAL INFORMATION");
        jPanel1.add(lbl_PersonalInfo_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 11, -1, -1));

        lbl_FirstName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_FirstName.setText("* First Name ( Given Name ) : ");
        jPanel1.add(lbl_FirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 100, -1, -1));

        txt_FirstName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_FirstName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txt_FirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 97, 143, -1));

        lbl_Save.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        lbl_Save.setText("Save");
        lbl_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_SaveActionPerformed(evt);
            }
        });
        jPanel1.add(lbl_Save, new org.netbeans.lib.awtextra.AbsoluteConstraints(293, 362, -1, -1));

        txt_Age.setEditable(false);
        txt_Age.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_Age.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txt_Age, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 175, 42, -1));
        jPanel1.add(mb_LastNameError, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 58, -1, -1));

        lbl_Warning.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        lbl_Warning.setForeground(new java.awt.Color(255, 0, 0));
        lbl_Warning.setText("All fields marked with * are Mandatory.");
        jPanel1.add(lbl_Warning, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 410, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/User_Interface/28_34_gif.gif"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, 1240, 720));

        btn_AttachBiometric.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btn_AttachBiometric.setText("Attach File");
        btn_AttachBiometric.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_AttachBiometric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AttachBiometricActionPerformed(evt);
            }
        });
        jPanel1.add(btn_AttachBiometric, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, 100, -1));

        txt_BiometricIdentifier.setEditable(false);
        txt_BiometricIdentifier.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jPanel1.add(txt_BiometricIdentifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 250, 140, -1));

        txt_FullFacePhoto.setEditable(false);
        txt_FullFacePhoto.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_FullFacePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_FullFacePhotoActionPerformed(evt);
            }
        });
        jPanel1.add(txt_FullFacePhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, 140, -1));
        jPanel1.add(lbl_Image, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 480, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1434, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbl_SaveActionPerformed
        // TODO add your handling code here

        /* Validating the Personal Information that has been entered */
        //errorcode_FName = Pattern.matches("[a-zA-Z'.-]",txt_LastName.getText());
        //errorcode_LName=Pattern.matches("[a-zA-Z'.-]",txt_FirstName.getText());
//        errorcode_DOB = Pattern.matches("(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d", txt_DOB.getText());
//        errorcode_SSN = Pattern.matches("{9}[0-9]", txt_SSN.getText());
//
//        if (txt_LastName.getText().isBlank() || txt_FirstName.getText().isBlank() || txt_DOB.getText().isBlank() || txt_SSN.getText().isBlank() || txt_FullFacePhoto.getText().isBlank() || txt_BiometricIdentifier.getText().isBlank()) {
//            
//        } else if (txt_SSN.getText().length() != 9) {
//            errorcode_SSN = true;
//
//        } else if (!Pattern.matches("\\d", txt_LastName.getText())) {
//            JOptionPane.showMessageDialog(this, "Last Name cannot contain numbers");
//        } else if (!Pattern.matches("\\d", txt_FirstName.getText())) {
//            JOptionPane.showMessageDialog(this, "First Name cannot contain numbers");
//        } else if (errorcode_DOB == false) {
//            JOptionPane.showMessageDialog(this, "Invalid DOB Format");
//        } else if (errorcode_SSN == true) {
//            JOptionPane.showMessageDialog(this, "Invalid SSN Format");
//        } else {
//            product.setLast_Name(txt_LastName.getText());
//            product.setFirst_Name(txt_FirstName.getText());
//            product.setDOB(txt_DOB.getText());
//            product.setSSN(txt_SSN.getText());
//            product.setUniqueIdentifier(txt_Unique_Identifier.getText());
//            JOptionPane.showMessageDialog(this, "Personal Information Saved.");
//        }

        
        JOptionPane message =new JOptionPane();
        
        int errorCode= validatePersonalDetails();
        
        switch (errorCode) {
            case 1:
                message.showMessageDialog(this,
                        "First Name cannot be empty and has to be only alphabets");
                break;
            case 2:
                message.showMessageDialog(this,
                        "Last Name has to be only alphabets");
                break;
            case 4:
                message.showMessageDialog(this,
                        "Date of birth is invalid and "
                                + "has to have mm/dd/yyyy format");
                break;
            case 7:
                message.showMessageDialog(this,
                        "SSN should be 9 digit number only");
                break;
            default:
                product.setFirst_Name(txt_FirstName.getText());
                product.setLast_Name(txt_LastName.getText());
                product.setDOB(txt_DOB.getText());
                product.setAge(txt_Age.getText());
                product.setSSN(txt_SSN.getText());
                message.showMessageDialog(this,
                        "Personal Details saved");
                break;
        }

        //JOptionPane.showMessageDialog(this, "Mandatory fields cannot be blank.");
    }//GEN-LAST:event_lbl_SaveActionPerformed

    private void btn_Get_AgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Get_AgeActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formatter = new SimpleDateFormat("MM/dd/yyyy");
        Date Local_Date = new Date();

        //errorcode_DOB = Pattern.matches("0[1-9]|1[012]-0[1-9]|1[0-9]|2[0-9]|3[01]-[<2021]|[>1800]", txt_DOB.getText());
        errorcode_DOB = Pattern.matches("(0[1-9]|1[012])[/](0[1-9]|[12][0-9]|3[01])[/](19|20)\\d\\d", txt_DOB.getText());
        if (errorcode_DOB == false) {
            JOptionPane.showMessageDialog(this, "Invalid DOB Format");
        }

        LocalDate dob = LocalDate.parse(txt_DOB.getText(),
                DateTimeFormatter.ofPattern("MM/dd/yyyy"));
        LocalDate currentDate = LocalDate.now();
        Age = Period.between(dob, currentDate);
        txt_Age.setText(String.valueOf(Age.getYears()));
        btn_Get_Age.setVisible(false);
        product.setAge(txt_Age.getText());

    }//GEN-LAST:event_btn_Get_AgeActionPerformed

    private void txt_DOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_DOBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_DOBActionPerformed

    private void txt_LastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_LastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_LastNameActionPerformed

    private void btn_Attach_PhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Attach_PhotoActionPerformed
        // TODO add your handling code here:
        JFileChooser browse = new JFileChooser();
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("Only jpg and jpeg Supported", "jpeg", "jpg");
        browse.setFileFilter(extensionFilter);
        browse.showOpenDialog(null);
        File f_photo = browse.getSelectedFile();
        String filename_photo = f_photo.getName();
        txt_FullFacePhoto.setText(filename_photo);
        fullface_photo = new BufferedImage(100, 100, BufferedImage.TYPE_INT_ARGB);

        try {
            fullface_photo = ImageIO.read(f_photo);
        } catch (IOException ex) {
            Logger.getLogger(PersonalInfoJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        product.setFull_Face_Photo(fullface_photo);

    }//GEN-LAST:event_btn_Attach_PhotoActionPerformed

    private void txt_FullFacePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_FullFacePhotoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_FullFacePhotoActionPerformed

    private void btn_AttachBiometricActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AttachBiometricActionPerformed
        // TODO add your handling code here:
        JFileChooser browse = new JFileChooser();
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("Only jpg and jpeg Supported", "jpeg", "jpg");
        browse.setFileFilter(extensionFilter);
        browse.showOpenDialog(null);
        File f_biometric = browse.getSelectedFile();
        String filename_biometric = f_biometric.getName();
        txt_BiometricIdentifier.setText(filename_biometric);
        biometric_identifier = new BufferedImage(100, 100, BufferedImage.TYPE_INT_ARGB);

        try {
            biometric_identifier = ImageIO.read(f_biometric);
        } catch (IOException ex) {
            Logger.getLogger(PersonalInfoJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        product.setBiometric_Identifier(biometric_identifier);

    }//GEN-LAST:event_btn_AttachBiometricActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_AttachBiometric;
    private javax.swing.JButton btn_Attach_Photo;
    private javax.swing.JButton btn_Get_Age;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lbl_Age;
    private javax.swing.JLabel lbl_Biometric_Identifier;
    private javax.swing.JLabel lbl_DOB;
    private javax.swing.JLabel lbl_FirstName;
    private javax.swing.JLabel lbl_Full_Face_Photo;
    private javax.swing.JLabel lbl_Image;
    private javax.swing.JLabel lbl_Name;
    private javax.swing.JLabel lbl_PersonalInfo_Title;
    private javax.swing.JLabel lbl_SSN;
    private javax.swing.JButton lbl_Save;
    private javax.swing.JLabel lbl_Unique_Identifier;
    private javax.swing.JLabel lbl_Warning;
    private javax.swing.JLabel mb_LastNameError;
    private javax.swing.JTextField txt_Age;
    private javax.swing.JTextField txt_BiometricIdentifier;
    private javax.swing.JTextField txt_DOB;
    private javax.swing.JTextField txt_FirstName;
    private javax.swing.JTextField txt_FullFacePhoto;
    private javax.swing.JTextField txt_LastName;
    private javax.swing.JTextField txt_SSN;
    private javax.swing.JTextField txt_Unique_Identifier;
    // End of variables declaration//GEN-END:variables

    private int validatePersonalDetails() {
        int errorCode=0;
        
        if(txt_FirstName.getText().isEmpty() | 
                !Pattern.matches("[a-zA-Z]+",txt_FirstName.getText())){
            errorCode=1;
        }else if(!txt_LastName.getText().isEmpty() &
                !Pattern.matches("[a-zA-Z]+",txt_LastName.getText())){
            errorCode= 2;
        }else if(txt_DOB.getText().isEmpty() |
                !Pattern.matches(
                        "(0[1-9]|1[012])\\/(0[1-9]|[12][0-9]|3[01])\\/([0-9]{4})$",
                        txt_DOB.getText())){
            errorCode= 4;
        }else if(!txt_SSN.getText().isEmpty()&
                !Pattern.matches("{9}[0-9]+",txt_SSN.getText())){
            errorCode= 7;
        }
        
        return errorCode;
    }
}
